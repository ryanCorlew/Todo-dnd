{"version":3,"sources":["StyledComponents/MyTextField.js","StyledComponents/MyButton.js","Components/EditForm.js","Components/Todo.js","StyledComponents/MyCard.js","Components/Column.js","Components/ListColumns.js","TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","input","color","MyTextField","change","value","isEditing","classes","TextField","InputProps","className","placeholder","onChange","defaultValue","marginLeft","border","backgroundColor","MyButton","props","Button","onClick","click","variant","disabled","children","EditForm","editSubmit","id","onSubmit","e","padding","Task","styled","div","BtnsContainer","Todo","todo","index","onDelete","onEdit","showEditForm","editChange","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","task","IconButton","aria-label","minWidth","height","margin","MyCard","Card","Title","h1","TodoList","Column","todos","column","title","droppableId","droppableProps","map","key","ListColumns","todosObj","columns","todoIds","todoId","find","display","justifyContent","marginTop","flexWrap","TodoApp","onDragEnd","state","submit","Fragment","newTodo","result","Container","App","editedTodo","destination","source","newColumns","startColumn","endColumn","startTodos","endTodos","splice","setState","localStorage","setItem","JSON","stringify","newTodos","inputChangeHandler","target","editChangeHandler","addFormSubmitHandler","preventDefault","uuidv4","push","editFormSubmitHandler","deleteHandler","reduce","prev","cur","filter","editHandler","parse","getItem","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sUAIMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,eAETC,MAAO,CACLC,MAAO,WAkCIC,EA9BK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAC9BC,EAAUV,IAEhB,OAAIS,EAEA,kBAACE,EAAA,EAAD,CACED,QAAS,CAAER,KAAMQ,EAAQR,MACzBU,WAAY,CACVC,UAAW,MAEbC,YAAY,GACZC,SAAUR,EACVS,aAAcR,IAKhB,kBAACG,EAAA,EAAD,CACED,QAAS,CAAER,KAAMQ,EAAQR,MACzBU,WAAY,CACVC,UAAWH,EAAQN,OAErBU,YAAY,eACZC,SAAUR,EACVC,MAAOA,K,SCjCTR,EAAYC,YAAW,CAC3BC,KAAM,CACJe,WAAY,MACZZ,MAAO,QACPa,OAAQ,sBACR,UAAW,CAAEC,gBAAiB,WAC9B,aAAc,CACZd,MAAO,OACPa,OAAQ,qBAmBCE,EAdE,SAACC,GAChB,IAAMX,EAAUV,IAChB,OACE,kBAACsB,EAAA,EAAD,CACEC,QAASF,EAAMG,MACfX,UAAWH,EAAQR,KACnBuB,QAAQ,WACRC,SAA0B,KAAhBL,EAAMb,OAEfa,EAAMM,W,2DCfEC,EARE,SAAC,GAAuC,IAArCrB,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,MAAOqB,EAAqB,EAArBA,WAAYC,EAAS,EAATA,GAC7C,OACE,0BAAMC,SAAU,SAACC,GAAD,OAAOH,EAAWG,EAAGF,KACnC,kBAAC,EAAD,CAAarB,WAAS,EAACF,OAAQA,EAAQC,MAAOA,M,2kBCKpD,IAAMR,EAAYC,YAAW,CAC3BC,KAAM,CACJ+B,QAAS,SAIPC,EAAOC,IAAOC,IAAV,KAoBJC,GAPSF,IAAOC,IAAV,KAOUD,IAAOC,IAAV,MA0DJE,EArDF,SAAC,GAQP,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MACAC,EAKI,EALJA,SACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAf,EACI,EADJA,WAEMnB,EAAUV,IAEhB,OACE,kBAAC,IAAD,CAAW6C,YAAaN,EAAKT,GAAIU,MAAOA,IACrC,SAACM,GAAD,OACC,kBAACZ,EAAD,eACEa,IAAKD,EAASE,UACVF,EAASG,eACTH,EAASI,iBAKZP,EACC,kBAAC,EAAD,CACEd,WAAYA,EACZtB,OAAQqC,EACRpC,MAAO+B,EAAKY,KACZrB,GAAIS,EAAKT,KAGXS,EAAKY,KAEP,kBAACd,EAAD,KACE,kBAACe,EAAA,EAAD,CACE7B,QAAS,kBAAMmB,EAAOH,EAAKT,KAC3BjB,UAAWH,EAAQR,MAEnB,kBAAC,IAAD,OAEF,kBAACkD,EAAA,EAAD,CACE7B,QAAS,kBAAMkB,EAASF,EAAKT,KAC7BjB,UAAWH,EAAQR,KACnBmD,aAAW,UAEX,kBAAC,IAAD,a,SClFRrD,EAAYC,YAAW,CAC3BC,KAAM,CACJiB,gBAAiB,YACjBd,MAAO,QACP4B,QAAS,OACTf,OAAQ,gBACRf,MAAO,cACPmD,SAAU,QACVC,OAAQ,cACRC,OAAQ,UASGC,EALA,SAACpC,GACd,IAAMX,EAAUV,IAChB,OAAO,kBAAC0D,EAAA,EAAD,CAAM7C,UAAWH,EAAQR,MAAOmB,EAAMM,W,gPCb/C,IAAMgC,EAAQxB,IAAOyB,GAAV,KAKLC,EAAW1B,IAAOC,IAAV,KAwCC0B,EAnCA,SAAC,GAQT,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,OACAvB,EAKI,EALJA,SACAC,EAII,EAJJA,OACAjC,EAGI,EAHJA,UACAmC,EAEI,EAFJA,WACAf,EACI,EADJA,WAEA,OACE,kBAAC,EAAD,KACE,kBAAC8B,EAAD,KAAQK,EAAOC,OACf,kBAAC,IAAD,CAAWC,YAAaF,EAAOlC,KAC5B,SAACgB,GAAD,OACC,kBAACe,EAAD,eAAUd,IAAKD,EAASE,UAAcF,EAASqB,gBAC5CJ,EAAMK,KAAI,SAAC7B,EAAMC,GAAP,OACT,kBAAC,EAAD,CACE6B,IAAK9B,EAAKT,GACVS,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVC,OAAQA,EACRC,aAAclC,IAAc8B,EAAKT,GACjCc,WAAYA,EACZf,WAAYA,OAGfiB,EAAShC,kBCXPwD,EA7BK,SAAC,GAQd,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,QACA/B,EAKI,EALJA,SACAC,EAII,EAJJA,OACAjC,EAGI,EAHJA,UACAmC,EAEI,EAFJA,WACAf,EACI,EADJA,WAEA,OAAO2C,EAAQJ,KAAI,SAACJ,GAClB,IAAMD,EAAQC,EAAOS,QAAQL,KAAI,SAACM,GAAD,OAC/BH,EAASI,MAAK,SAACpC,GAAD,OAAUA,EAAKT,KAAO4C,QAGtC,OACE,kBAAC,EAAD,CACEL,IAAKL,EAAOlC,GACZiC,MAAOA,EACPC,OAAQA,EACRvB,SAAUA,EACVC,OAAQA,EACRjC,UAAWA,EACXmC,WAAYA,EACZf,WAAYA,QCPd7B,EAAYC,YAVH,CACbC,KAAM,CACJ0E,QAAS,OACTC,eAAgB,SAChB1E,MAAO,OACP2E,UAAW,OACXC,SAAU,UA4CCC,EAtCC,SAAC,GAUV,IATLC,EASI,EATJA,UACAC,EAQI,EARJA,MACA3E,EAOI,EAPJA,OACAqC,EAMI,EANJA,WACAuC,EAKI,EALJA,OACA3D,EAII,EAJJA,MACAiB,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAb,EACI,EADJA,WAEMnB,EAAUV,IAEhB,OACE,kBAAC,IAAMoF,SAAP,KACE,0BAAMrD,SAAUoD,GACd,kBAAC,EAAD,CAAa5E,OAAQA,EAAQC,MAAO0E,EAAMG,UAC1C,kBAAC,EAAD,CAAU7D,MAAOA,EAAOhB,MAAO0E,EAAMG,SAArC,aAIF,kBAAC,IAAD,CAAiBJ,UAAW,SAACK,GAAD,OAAYL,EAAUK,KAChD,kBAACC,EAAA,EAAD,CAAW1E,UAAWH,EAAQR,MAC5B,kBAAC,EAAD,CACEqE,SAAUW,EAAMnB,MAChBS,QAASU,EAAMV,QACf/B,SAAUA,EACVC,OAAQA,EACRjC,UAAWyE,EAAMzE,UACjBmC,WAAYA,EACZf,WAAYA,QCgJT2D,E,4MA3LbN,MAAQ,CACNnB,MAAO,GACPS,QAAS,CACP,CACE1C,GAAI,WACJmC,MAAO,OACPQ,QAAS,IAEX,CACE3C,GAAI,WACJmC,MAAO,cACPQ,QAAS,IAEX,CACE3C,GAAI,WACJmC,MAAO,YACPQ,QAAS,KAGbY,QAAS,GACTI,WAAY,GACZhF,UAAW,I,EAYbwE,UAAY,SAACK,GAAY,IACfI,EAAqCJ,EAArCI,YAAaC,EAAwBL,EAAxBK,OAAQ9C,EAAgByC,EAAhBzC,YAE7B,GAAK6C,IAKHA,EAAYxB,cAAgByB,EAAOzB,aACnCwB,EAAYlD,QAAUmD,EAAOnD,OAF/B,CAOA,GAAIkD,EAAYxB,cAAgByB,EAAOzB,YAAa,CAClD,IAAM0B,EAAU,YAAO,EAAKV,MAAMV,SAC5BqB,EAAcD,EAAWjB,MAC7B,SAACX,GAAD,OAAYA,EAAOlC,KAAO6D,EAAOzB,eAE7B4B,EAAYF,EAAWjB,MAC3B,SAACX,GAAD,OAAYA,EAAOlC,KAAO4D,EAAYxB,eAElC6B,EAAU,YAAOF,EAAYpB,SAC7BuB,EAAQ,YAAOF,EAAUrB,SAW/B,OATAsB,EAAWE,OAAON,EAAOnD,MAAO,GAChCwD,EAASC,OAAOP,EAAYlD,MAAO,EAAGK,GAEtCgD,EAAYpB,QAAUsB,EACtBD,EAAUrB,QAAUuB,OAEpB,EAAKE,SAAS,CAAE1B,QAASoB,IAAc,WACrCO,aAAaC,QAAQ,UAAWC,KAAKC,UAAU,EAAKpB,MAAMV,aAK9D,IAAMoB,EAAU,YAAO,EAAKV,MAAMV,SAC5BR,EAAS4B,EAAWjB,MACxB,SAACX,GAAD,OAAYA,EAAOlC,KAAO6D,EAAOzB,eAG7BqC,EAAQ,YAAOvC,EAAOS,SAC5B8B,EAASN,OAAON,EAAOnD,MAAO,GAC9B+D,EAASN,OAAOP,EAAYlD,MAAO,EAAGK,GAEtCmB,EAAOS,QAAU8B,EAEjB,EAAKL,SAAS,CAAE1B,QAASoB,IAAc,WACrCO,aAAaC,QAAQ,UAAWC,KAAKC,UAAU,EAAKpB,MAAMV,e,EAI9DgC,mBAAqB,SAACxE,GACpB,EAAKkE,SAAS,CAAEb,QAASrD,EAAEyE,OAAOjG,S,EAGpCkG,kBAAoB,SAAC1E,GAEnB,EAAKkE,SAAS,CAAET,WAAYzD,EAAEyE,OAAOjG,S,EAGvCmG,qBAAuB,SAAC3E,GAEtB,GADAA,EAAE4E,iBACyB,KAAvB,EAAK1B,MAAMG,QAAf,CAIA,IAAMkB,EAAQ,YAAO,EAAKrB,MAAMnB,OAC1B6B,EAAU,YAAO,EAAKV,MAAMV,SAE5BR,EAAS4B,EAAWjB,MAAK,SAACX,GAAD,MAA0B,aAAdA,EAAOlC,MAE5C2C,EAAO,YAAOT,EAAOS,SAErB3C,EAAK+E,cAEXpC,EAAQqC,KAAKhF,GAEbyE,EAASO,KAAK,CAAEhF,GAAIA,EAAIqB,KAAM,EAAK+B,MAAMG,UAEzCrB,EAAOS,QAAUA,EAGjB,EAAKyB,SAAS,CAAEnC,MAAOwC,EAAU/B,QAASoB,EAAYP,QAAS,KAAM,WACnEc,aAAaC,QAAQ,QAASC,KAAKC,UAAU,EAAKpB,MAAMnB,QACxDoC,aAAaC,QAAQ,UAAWC,KAAKC,UAAU,EAAKpB,MAAMV,e,EAI9DuC,sBAAwB,SAAC/E,EAAGF,GAC1BE,EAAE4E,iBACF,IAAML,EAAQ,YAAO,EAAKrB,MAAMnB,OAEhCwC,EAASnC,KAAI,SAAC7B,GACZ,OAAIA,EAAKT,KAAOA,GACdS,EAAKY,KAAO,EAAK+B,MAAMO,WAChBlD,GAEAA,KAIX,EAAK2D,SAAS,CAAEnC,MAAOwC,EAAU9F,UAAW,KAAM,WAChD0F,aAAaC,QAAQ,QAASC,KAAKC,UAAU,EAAKpB,MAAMnB,Y,EAI5DiD,cAAgB,SAAClF,GAGf,GAFa,EAAKoD,MAAMnB,MAAMY,MAAK,SAACpC,GAAD,OAAUA,EAAKT,KAAOA,KAE/C,CACR,IAAM8D,EAAa,EAAKV,MAAMV,QAAQyC,QAAO,SAACC,EAAMC,GAGlD,OAFAA,EAAI1C,QAAU0C,EAAI1C,QAAQ2C,QAAO,SAAC1C,GAAD,OAAYA,IAAW5C,KACxDoF,EAAKJ,KAAKK,GACHD,IACN,IAEGX,EAAW,EAAKrB,MAAMnB,MAAMqD,QAAO,SAAC7E,GAAD,OAAUA,EAAKT,KAAOA,KAE/D,EAAKoE,SAAS,CAAEnC,MAAOwC,EAAU/B,QAASoB,IAAc,WACtDO,aAAaC,QAAQ,QAASC,KAAKC,UAAU,EAAKpB,MAAMnB,QACxDoC,aAAaC,QAAQ,UAAWC,KAAKC,UAAU,EAAKpB,MAAMV,e,EAKhE6C,YAAc,SAACvF,GACb,EAAKoE,SAAS,CAAEzF,UAAWqB,K,kEAxI3B,IAAIiC,EAAQsC,KAAKiB,MAAMnB,aAAaoB,QAAQ,UACxC/C,EAAU6B,KAAKiB,MAAMnB,aAAaoB,QAAQ,YAE1CxD,GAASS,GACXgD,KAAKtB,SAAS,CAAEnC,MAAOA,EAAOS,QAASA,M,+BAwIzC,OACE,yBAAK3D,UAAU,OACb,wBAAIA,UAAU,SAAd,OACM,uCAEN,uBAAGA,UAAU,YAAb,sBACA,kBAAC,EAAD,CACEqE,MAAOsC,KAAKtC,MACZD,UAAWuC,KAAKvC,UAChB1E,OAAQiH,KAAKhB,mBACb5D,WAAY4E,KAAKd,kBACjBvB,OAAQqC,KAAKb,qBACbnF,MAAOgG,KAAKb,qBACZlE,SAAU+E,KAAKR,cACftE,OAAQ8E,KAAKH,YACbxF,WAAY2F,KAAKT,6B,GArLTU,IAAMC,WCKJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5f1a9660.chunk.js","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"fit-content\",\n  },\n  input: {\n    color: \"white\",\n  },\n});\n\nconst MyTextField = ({ change, value, isEditing }) => {\n  const classes = useStyles();\n\n  if (isEditing) {\n    return (\n      <TextField\n        classes={{ root: classes.root }}\n        InputProps={{\n          className: null,\n        }}\n        placeholder=\"\"\n        onChange={change}\n        defaultValue={value}\n      />\n    );\n  } else {\n    return (\n      <TextField\n        classes={{ root: classes.root }}\n        InputProps={{\n          className: classes.input,\n        }}\n        placeholder=\"Enter a Todo\"\n        onChange={change}\n        value={value}\n      />\n    );\n  }\n};\n\nexport default MyTextField;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginLeft: \"5px\",\n    color: \"white\",\n    border: \"1px solid lightgrey\",\n    \"&:hover\": { backgroundColor: \"#708594\" },\n    \"&:disabled\": {\n      color: \"grey\",\n      border: \"1px solid grey\",\n    },\n  },\n});\n\nconst MyButton = (props) => {\n  const classes = useStyles();\n  return (\n    <Button\n      onClick={props.click}\n      className={classes.root}\n      variant=\"outlined\"\n      disabled={props.value === \"\"}\n    >\n      {props.children}\n    </Button>\n  );\n};\n\nexport default MyButton;\n","import React from \"react\";\nimport MyTextField from \"../StyledComponents/MyTextField\";\n\nconst EditForm = ({ change, value, editSubmit, id }) => {\n  return (\n    <form onSubmit={(e) => editSubmit(e, id)}>\n      <MyTextField isEditing change={change} value={value} />\n    </form>\n  );\n};\n\nexport default EditForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DragHandle from \"@material-ui/icons/DragHandle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport MyTextField from \"../StyledComponents/MyTextField\";\nimport EditForm from \"./EditForm\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"2px\",\n  },\n});\n\nconst Task = styled.div`\n  min-height: 3rem;\n  width: 12rem;\n  margin: 8px;\n  padding: 2px 8px 2px 8px;\n  display: flex;\n  text-align: left;\n  align-items: center;\n  border-radius: 10px;\n  box-shadow: 0px 0px 6px 1px #39373f;\n  background-color: lightgrey;\n`;\n\nconst Handle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 2px;\n`;\n\nconst BtnsContainer = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n\nconst Todo = ({\n  todo,\n  index,\n  onDelete,\n  onEdit,\n  showEditForm,\n  editChange,\n  editSubmit,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Draggable draggableId={todo.id} index={index}>\n      {(provided) => (\n        <Task\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          {/* <Handle>\n            <DragHandle />\n          </Handle> */}\n          {showEditForm ? (\n            <EditForm\n              editSubmit={editSubmit}\n              change={editChange}\n              value={todo.task}\n              id={todo.id}\n            />\n          ) : (\n            todo.task\n          )}\n          <BtnsContainer>\n            <IconButton\n              onClick={() => onEdit(todo.id)}\n              className={classes.root}\n            >\n              <EditIcon />\n            </IconButton>\n            <IconButton\n              onClick={() => onDelete(todo.id)}\n              className={classes.root}\n              aria-label=\"delete\"\n            >\n              <DeleteIcon />\n            </IconButton>\n          </BtnsContainer>\n        </Task>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"lightgrey\",\n    color: \"black\",\n    padding: \"10px\",\n    border: \"solid #00A4FA\",\n    width: \"fit-content\",\n    minWidth: \"224px\",\n    height: \"fit-content\",\n    margin: \"10px\",\n  },\n});\n\nconst MyCard = (props) => {\n  const classes = useStyles();\n  return <Card className={classes.root}>{props.children}</Card>;\n};\n\nexport default MyCard;\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport MyCard from \"../StyledComponents/MyCard\";\nimport styled from \"styled-components\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst Title = styled.h1`\n  margin-top: 2px;\n  border-bottom: solid;\n`;\n\nconst TodoList = styled.div`\n  //   background-color: blue;\n  min-height: 25px;\n`;\n\nconst Column = ({\n  todos,\n  column,\n  onDelete,\n  onEdit,\n  isEditing,\n  editChange,\n  editSubmit,\n}) => {\n  return (\n    <MyCard>\n      <Title>{column.title}</Title>\n      <Droppable droppableId={column.id}>\n        {(provided) => (\n          <TodoList ref={provided.innerRef} {...provided.droppableProps}>\n            {todos.map((todo, index) => (\n              <Todo\n                key={todo.id}\n                todo={todo}\n                index={index}\n                onDelete={onDelete}\n                onEdit={onEdit}\n                showEditForm={isEditing === todo.id ? true : false}\n                editChange={editChange}\n                editSubmit={editSubmit}\n              />\n            ))}\n            {provided.placeholder}\n          </TodoList>\n        )}\n      </Droppable>\n    </MyCard>\n  );\n};\n\nexport default Column;\n","import React from \"react\";\nimport Column from \"./Column\";\n\nconst ListColumns = ({\n  todosObj,\n  columns,\n  onDelete,\n  onEdit,\n  isEditing,\n  editChange,\n  editSubmit,\n}) => {\n  return columns.map((column) => {\n    const todos = column.todoIds.map((todoId) =>\n      todosObj.find((todo) => todo.id === todoId)\n    );\n\n    return (\n      <Column\n        key={column.id}\n        todos={todos}\n        column={column}\n        onDelete={onDelete}\n        onEdit={onEdit}\n        isEditing={isEditing}\n        editChange={editChange}\n        editSubmit={editSubmit}\n      />\n    );\n  });\n};\n\nexport default ListColumns;\n","import React from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\nimport MyTextField from \"./StyledComponents/MyTextField\";\nimport MyButton from \"./StyledComponents/MyButton\";\n\nimport ListColumns from \"./Components/ListColumns\";\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    marginTop: \"20px\",\n    flexWrap: \"wrap\",\n  },\n};\n\nconst useStyles = makeStyles(styles);\n\nconst TodoApp = ({\n  onDragEnd,\n  state,\n  change,\n  editChange,\n  submit,\n  click,\n  onDelete,\n  onEdit,\n  editSubmit,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <form onSubmit={submit}>\n        <MyTextField change={change} value={state.newTodo} />\n        <MyButton click={click} value={state.newTodo}>\n          Add Todo\n        </MyButton>\n      </form>\n      <DragDropContext onDragEnd={(result) => onDragEnd(result)}>\n        <Container className={classes.root}>\n          <ListColumns\n            todosObj={state.todos}\n            columns={state.columns}\n            onDelete={onDelete}\n            onEdit={onEdit}\n            isEditing={state.isEditing}\n            editChange={editChange}\n            editSubmit={editSubmit}\n          />\n        </Container>\n      </DragDropContext>\n    </React.Fragment>\n  );\n};\n\nexport default TodoApp;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"./App.css\";\n\nimport TodoApp from \"./TodoApp\";\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    columns: [\n      {\n        id: \"column-1\",\n        title: \"ToDo\",\n        todoIds: [],\n      },\n      {\n        id: \"column-2\",\n        title: \"In Progress\",\n        todoIds: [],\n      },\n      {\n        id: \"column-3\",\n        title: \"Complete!\",\n        todoIds: [],\n      },\n    ],\n    newTodo: \"\",\n    editedTodo: \"\",\n    isEditing: \"\",\n  };\n\n  componentDidMount() {\n    let todos = JSON.parse(localStorage.getItem(\"todos\"));\n    let columns = JSON.parse(localStorage.getItem(\"columns\"));\n\n    if (todos && columns) {\n      this.setState({ todos: todos, columns: columns });\n    }\n  }\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (destination.droppableId !== source.droppableId) {\n      const newColumns = [...this.state.columns];\n      const startColumn = newColumns.find(\n        (column) => column.id === source.droppableId\n      );\n      const endColumn = newColumns.find(\n        (column) => column.id === destination.droppableId\n      );\n      const startTodos = [...startColumn.todoIds];\n      const endTodos = [...endColumn.todoIds];\n\n      startTodos.splice(source.index, 1);\n      endTodos.splice(destination.index, 0, draggableId);\n\n      startColumn.todoIds = startTodos;\n      endColumn.todoIds = endTodos;\n\n      this.setState({ columns: newColumns }, () => {\n        localStorage.setItem(\"columns\", JSON.stringify(this.state.columns));\n      });\n      return;\n    }\n\n    const newColumns = [...this.state.columns];\n    const column = newColumns.find(\n      (column) => column.id === source.droppableId\n    );\n\n    const newTodos = [...column.todoIds];\n    newTodos.splice(source.index, 1);\n    newTodos.splice(destination.index, 0, draggableId);\n\n    column.todoIds = newTodos;\n\n    this.setState({ columns: newColumns }, () => {\n      localStorage.setItem(\"columns\", JSON.stringify(this.state.columns));\n    });\n  };\n\n  inputChangeHandler = (e) => {\n    this.setState({ newTodo: e.target.value });\n  };\n\n  editChangeHandler = (e) => {\n    // console.log(\"editing\", e.target.value);\n    this.setState({ editedTodo: e.target.value });\n  };\n\n  addFormSubmitHandler = (e) => {\n    e.preventDefault();\n    if (this.state.newTodo === \"\") {\n      return;\n    }\n    // Copy Todos and Columns\n    const newTodos = [...this.state.todos];\n    const newColumns = [...this.state.columns];\n    // Find first column\n    const column = newColumns.find((column) => column.id === \"column-1\");\n    // Get ids of first column\n    const todoIds = [...column.todoIds];\n    // Populate ID for new task\n    const id = uuidv4();\n    // Push id into column\n    todoIds.push(id);\n    // Put new task in todos object\n    newTodos.push({ id: id, task: this.state.newTodo });\n    // Set todoIds array to column object\n    column.todoIds = todoIds;\n\n    // Update state\n    this.setState({ todos: newTodos, columns: newColumns, newTodo: \"\" }, () => {\n      localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n      localStorage.setItem(\"columns\", JSON.stringify(this.state.columns));\n    });\n  };\n\n  editFormSubmitHandler = (e, id) => {\n    e.preventDefault();\n    const newTodos = [...this.state.todos];\n\n    newTodos.map((todo) => {\n      if (todo.id === id) {\n        todo.task = this.state.editedTodo;\n        return todo;\n      } else {\n        return todo;\n      }\n    });\n\n    this.setState({ todos: newTodos, isEditing: \"\" }, () => {\n      localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n    });\n  };\n\n  deleteHandler = (id) => {\n    const task = this.state.todos.find((todo) => todo.id === id);\n\n    if (task) {\n      const newColumns = this.state.columns.reduce((prev, cur) => {\n        cur.todoIds = cur.todoIds.filter((todoId) => todoId !== id);\n        prev.push(cur);\n        return prev;\n      }, []);\n\n      const newTodos = this.state.todos.filter((todo) => todo.id !== id);\n\n      this.setState({ todos: newTodos, columns: newColumns }, () => {\n        localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n        localStorage.setItem(\"columns\", JSON.stringify(this.state.columns));\n      });\n    }\n  };\n\n  editHandler = (id) => {\n    this.setState({ isEditing: id });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"Title\">\n          Todo<span>List</span>\n        </h1>\n        <p className=\"SubTitle\">With Drag and Drop</p>\n        <TodoApp\n          state={this.state}\n          onDragEnd={this.onDragEnd}\n          change={this.inputChangeHandler}\n          editChange={this.editChangeHandler}\n          submit={this.addFormSubmitHandler}\n          click={this.addFormSubmitHandler}\n          onDelete={this.deleteHandler}\n          onEdit={this.editHandler}\n          editSubmit={this.editFormSubmitHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}